    class Solution {
        public long maximumTotalCost(int[] nums) {
            // dp[i][0] = dp[i-1][1] - nums[i]
            // dp[i][1] = dp[i-1][1] + nums[i], dp[i-1][0] + nums[i]

            // 1 -2 3 4
            // n 1
            // 1 3

            Long one = null;
            Long zero = null;
            if (nums.length == 1) {
                return nums[0];
            }
            for (int num : nums) {
                if (one == null && zero == null) {
                    one = (long)num;
                    continue;
                }
                Long tmpOne = one;
                Long tmpZero = zero;
                zero = tmpOne - num;
                one = tmpOne + num;
                if (tmpZero != null) {
                    one = Math.max(one, tmpZero + num);
                }

            }
            return Math.max(one, zero);
        }
    }

//runtime:7 ms
//memory:59.2 MB
